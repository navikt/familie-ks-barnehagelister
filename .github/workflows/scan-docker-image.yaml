name: Scan docker image
on:
  schedule:
    - cron: 0 4 * * 1
  workflow_dispatch:
permissions:
  contents: read

env:
  TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    permissions:
      contents: write # dep-submission
      id-token: write # nais docker-build-push
      security-events: write # push sarif to github security
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
          allowed-endpoints: "api.github.com:443\nauth.docker.io:443\ncollector-internet.external.prod-gcp.nav.cloud.nais.io:443\ndeploy.nav.cloud.nais.io:443\nd2glxqk2uabbnd.cloudfront.net:443\neurope-north1-docker.pkg.dev:443\nfulcio.sigstore.dev:443\ngcr.io:443\ngithub-registry-files.githubusercontent.com:443\ngithub.com:443\niamcredentials.googleapis.com:443\nlogin.microsoftonline.com:443\nmaven.pkg.github.com:443\nobjects.githubusercontent.com:443\nproduction.cloudflare.docker.com:443\npublic.ecr.aws:443\nregistry-1.docker.io:443  \nrekor.sigstore.dev:443\nrepo.maven.apache.org:443\nsts.googleapis.com:443\ntest.maskinporten.no:443\ntuf-repo-cdn.sigstore.dev:443\n"
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # ratchet:actions/checkout@v4
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # ratchet:actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Bygg med maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B -DskipTests --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml
      - uses: nais/docker-build-push@791ebb6f74b82849c742a9bc9c97abe44c6c111f # ratchet:nais/docker-build-push@v0
        id: docker-push
        if: github.event.pull_request.user.login != 'dependabot[bot]'
        with:
          pull: true
          team: teamfamilie
          push_image: true
          dockerfile: Dockerfile
          docker_context: .
          byosbom: target/classes/META-INF/sbom/application.cdx.json


      - name: Run Trivy vulnerability scanner
        if: github.event.pull_request.user.login != 'dependabot[bot]'
        uses: aquasecurity/trivy-action@f9424c10c36e288d5fa79bd3dfd1aeb2d6eae808 # ratchet:aquasecurity/trivy-action@master
        env: # Workaround for rate limiting inntil denne er fikset: https://github.com/aquasecurity/trivy-action/issues/389
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db,aquasec/trivy-db,ghcr.io/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db,aquasec/trivy-java-db,ghcr.io/aquasecurity/trivy-java-db

        with:
          image-ref: '${{ steps.docker-push.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true

      - name: Upload results to GitHub Security
        if: github.event.pull_request.user.login != 'dependabot[bot]'
        uses: github/codeql-action/upload-sarif@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d # ratchet:github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy.sarif'























